<?xml version="1.0" encoding="UTF-8" ?>
        <!--
        table 下包含多个 column resultmap operation sql 相应说明见定义
        namespace    命名空间
        sqlname      sql名
        remark      说明
        sequence     oracle使用
        physicalName 物理表名,分库分表使用
        -->
        <!ELEMENT table (operation* | sql* | column* )+>
        <!ATTLIST table
                sqlname CDATA #IMPLIED
                sequence CDATA #IMPLIED
                physicalName CDATA #IMPLIED
                remark CDATA #IMPLIED
                >

        <!ELEMENT column EMPTY>
        <!ATTLIST column
                name CDATA #REQUIRED
                javatype CDATA #REQUIRED
                >

        <!--
        最定义操作, 根据这里生成对应的 操作
        name          name
        paging        分页设置  - 暂时没想好怎么扩展 -后续加上(思路,如果设置paging 则自动添加分页参数 不需要自己写limit 只需要写查询条件即可)
        paramtype     参数类型: object 会自动翻译为 生成的对象,primitive 根据字段类型生成
        multiplicity  one 返回对象,many 返回list, paging 返回分页
        resulttype    指定返回类型(Map)
        resultmap     指定使用哪个resultmap 不写则使用自动生成的resultMap
        timeout       设置超时时间
        auto           - 暂时没想好怎么用,设想新增字段时自动修复
        -->
        <!ELEMENT operation (#PCDATA | sql)*>
        <!ATTLIST operation
                name CDATA #REQUIRED
                paging CDATA #IMPLIED
                paramtype (object|primitive|parameterObject) #IMPLIED
                multiplicity (one|many|paging) #IMPLIED
                remark CDATA #IMPLIED
                >


        <!ELEMENT sql (#PCDATA | selectKey | include | trim | where | set | foreach | choose | if | bind)*>
        <!ATTLIST sql
                id CDATA #IMPLIED
                >


        <!ELEMENT include EMPTY>
        <!ATTLIST include
                refid CDATA #REQUIRED
                >


        <!ELEMENT selectKey (#PCDATA | include)*>
        <!ATTLIST selectKey
                resultType CDATA #IMPLIED
                keyProperty CDATA #IMPLIED
                order (BEFORE|AFTER) #IMPLIED
                >

        <!-- - - - - - - - - - - - - - - - - - - - - - - - -
                         DYNAMIC ELEMENTS
          - - - - - - - - - - - - - - - - - - - - - - - - -->


        <!ELEMENT bind EMPTY>
        <!ATTLIST bind
                name CDATA #REQUIRED
                value CDATA #REQUIRED
                >

        <!ELEMENT trim (#PCDATA | include | trim | where | set | foreach | choose | if | bind)*>
        <!ATTLIST trim
                prefix CDATA #IMPLIED
                prefixOverrides CDATA #IMPLIED
                suffix CDATA #IMPLIED
                suffixOverrides CDATA #IMPLIED
                >

        <!ELEMENT where (#PCDATA | include | trim | where | set | foreach | choose | if | bind)*>

        <!ELEMENT set (#PCDATA | include | trim | where | set | foreach | choose | if | bind)*>

        <!ELEMENT foreach (#PCDATA | include | trim | where | set | foreach | choose | if | bind)*>
        <!ATTLIST foreach
                collection CDATA #REQUIRED
                item CDATA #IMPLIED
                index CDATA #IMPLIED
                open CDATA #IMPLIED
                close CDATA #IMPLIED
                separator CDATA #IMPLIED
                >

        <!ELEMENT choose (when* , otherwise?)>

        <!ELEMENT when (#PCDATA | include | trim | where | set | foreach | choose | if | bind)*>
        <!ATTLIST when
                test CDATA #REQUIRED
                >

        <!ELEMENT otherwise (#PCDATA | include | trim | where | set | foreach | choose | if | bind)*>

        <!ELEMENT if (#PCDATA | include | trim | where | set | foreach | choose | if | bind)*>
        <!ATTLIST if
                test CDATA #REQUIRED
                >